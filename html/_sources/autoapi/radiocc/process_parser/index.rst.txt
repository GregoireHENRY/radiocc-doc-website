:py:mod:`radiocc.process_parser`
================================

.. py:module:: radiocc.process_parser

.. autoapi-nested-parse::

   Parse the folder to be processed.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   radiocc.process_parser.prepare_directories
   radiocc.process_parser.load_spice_kernels
   radiocc.process_parser.detect_folder_type
   radiocc.process_parser.get_data_file
   radiocc.process_parser.get_metadata_file
   radiocc.process_parser.get_data_and_meta_files
   radiocc.process_parser.read_input_metadata
   radiocc.process_parser.check_input_info
   radiocc.process_parser.read_L2_metadata
   radiocc.process_parser.read_tab_data
   radiocc.process_parser.read_L2_data



Attributes
~~~~~~~~~~

.. autoapisummary::

   radiocc.process_parser.SPICE_FOLDERS
   radiocc.process_parser.SPICE_RPATH_MEX
   radiocc.process_parser.LV2_RPATH
   radiocc.process_parser.DATA_RPATH_MAVEN
   radiocc.process_parser.METADATA_SUFFIX_MEX
   radiocc.process_parser.STATION_RPATH
   radiocc.process_parser.START_STATIONS_NAIF_CODE
   radiocc.process_parser.DEFAULT_DSN_STATION_NAIF_CODE
   radiocc.process_parser.DEFAULT_DSN_STATION_NAME
   radiocc.process_parser.BODIES_RPATH
   radiocc.process_parser.SPACECRAFT_RPATH
   radiocc.process_parser.DATA_COL_IDX_MEX
   radiocc.process_parser.METADATA_COL_IDX_MVN
   radiocc.process_parser.DATA_COL_IDX_MVN
   radiocc.process_parser.SPACECRAFT_NAIF_CODES
   radiocc.process_parser.INVALID_SIGMA_OBSERVED
   radiocc.process_parser.DEFAULT_ERROR
   radiocc.process_parser.DISTANCE_SHIFT_UNIT
   radiocc.process_parser.UNITS


.. py:data:: SPICE_FOLDERS
   

   

.. py:data:: SPICE_RPATH_MEX
   

   

.. py:data:: LV2_RPATH
   

   

.. py:data:: DATA_RPATH_MAVEN
   :annotation: = DATA

   

.. py:data:: METADATA_SUFFIX_MEX
   :annotation: = .LBL

   

.. py:data:: STATION_RPATH
   :annotation: = STATION.txt

   

.. py:data:: START_STATIONS_NAIF_CODE
   :annotation: = 399000

   

.. py:data:: DEFAULT_DSN_STATION_NAIF_CODE
   :annotation: = 398990

   

.. py:data:: DEFAULT_DSN_STATION_NAME
   :annotation: = NEW NORCIA

   

.. py:data:: BODIES_RPATH
   :annotation: = PLANETS_SATELLITE.txt

   

.. py:data:: SPACECRAFT_RPATH
   :annotation: = SPACECRAFT.txt

   

.. py:data:: DATA_COL_IDX_MEX
   

   

.. py:data:: METADATA_COL_IDX_MVN
   

   

.. py:data:: DATA_COL_IDX_MVN
   

   

.. py:data:: SPACECRAFT_NAIF_CODES
   

   

.. py:data:: INVALID_SIGMA_OBSERVED
   

   

.. py:data:: DEFAULT_ERROR
   :annotation: = 0.01

   

.. py:data:: DISTANCE_SHIFT_UNIT
   :annotation: = 4

   

.. py:data:: UNITS
   

   

.. py:function:: prepare_directories(scenario: radiocc.model.Scenario) -> None

   Prepare directories.


.. py:function:: load_spice_kernels(SCENARIO: radiocc.model.Scenario, FOLDER_TYPE: radiocc.model.ProcessType) -> None

   Load SPICE kernels.


.. py:function:: detect_folder_type(PROCESS_PATH: pathlib.Path) -> Optional[radiocc.model.ProcessType]

   Detect folder type.


.. py:function:: get_data_file(SCENARIO: radiocc.model.Scenario, FOLDER_TYPE: radiocc.model.ProcessType) -> Optional[pathlib.Path]

   Get the data input file.


.. py:function:: get_metadata_file(SCENARIO: radiocc.model.Scenario, FOLDER_TYPE: radiocc.model.ProcessType, DATA_FILE: pathlib.Path) -> Optional[pathlib.Path]

   Get the data input file.


.. py:function:: get_data_and_meta_files(SCENARIO: radiocc.model.Scenario, FOLDER_TYPE: radiocc.model.ProcessType) -> Optional[radiocc.model.L2Data]

   Get data file and metadata file.


.. py:function:: read_input_metadata(l2_data: radiocc.model.L2Data) -> radiocc.model.L2Data

   Read input metadata.


.. py:function:: check_input_info(l2_data: radiocc.model.L2Data, INFORMATION_PATH: pathlib.Path) -> radiocc.model.L2Data

   Check input data with the information folder.


.. py:function:: read_L2_metadata(l2_data: radiocc.model.L2Data, INFORMATION_PATH: pathlib.Path) -> radiocc.model.L2Data

   Read L2 data.


.. py:function:: read_tab_data(l2_data: radiocc.model.L2Data) -> radiocc.model.L2Data

   read the tab file.


.. py:function:: read_L2_data(SCENARIO: radiocc.model.Scenario, FOLDER_TYPE: radiocc.model.ProcessType) -> Optional[radiocc.model.L2Data]

   Read L2 data.


